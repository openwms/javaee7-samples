<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.javaee7</groupId>
    <artifactId>javaee7-samples</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Java EE 7 Samples</name>

    <properties>
        <cargo.container.glassfish.id>glassfish4x</cargo.container.glassfish.id>
        <cargo.container.glassfish.home>/Users/arungup/tools/glassfish/4.0/final/glassfish4</cargo.container.glassfish.home>
        <cargo.container.wildfly.id>wildfly8x</cargo.container.wildfly.id>
        <cargo.container.wildfly.home>/Users/arungup/tools/wildfly/wildfly-8.0.0.Alpha4</cargo.container.wildfly.home>
        <cargo.container.tomcat.id>tomcat8x</cargo.container.tomcat.id>
        <cargo.container.weblogic.id>weblogic12x</cargo.container.weblogic.id>
        <cargo.container.weblogic.home>/Users/arungup/tools/weblogic/12c/wlserver</cargo.container.weblogic.home>
        <netbeans.hint.deploy.server>gfv3ee6</netbeans.hint.deploy.server>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.8.2.2</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    
    <pluginRepositories>
        <pluginRepository>
            <id>codehaus-snapshots</id>
            <name>Codehaus Snapshots</name>
            <url>http://nexus.codehaus.org/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>codehaus-snapshots</id>
            <name>Codehaus Snapshots</name>
            <url>http://nexus.codehaus.org/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.4.5-SNAPSHOT</version>
                <configuration>
                    <container>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.derby</groupId>
                                <artifactId>derby</artifactId>
                            </dependency>
                        </dependencies>
                        <systemProperties>
                            <derby.system.home>${project.build.directory}/derby</derby.system.home>
                        </systemProperties>
                    </container>
                    <configuration>
                        <properties>
                            <cargo.datasource.datasource.derby>
                                cargo.datasource.driver=org.apache.derby.jdbc.EmbeddedDriver|
                                cargo.datasource.url=jdbc:derby:derbyDB;create=true|
                                cargo.datasource.jndi=jdbc/__default|
                                cargo.datasource.username=APP|
                                cargo.datasource.password=APP
                            </cargo.datasource.datasource.derby>
                        </properties>
                    </configuration>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>glassfish</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.4.5-SNAPSHOT</version>
                        <configuration>
                            <container>
                                <containerId>${cargo.container.glassfish.id}</containerId>
                                <type>installed</type>
                                <home>${cargo.container.glassfish.home}</home>
                                <!--         
                                Use this fragment if want to download/run the app server on demand                       
                                <artifactInstaller>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>glassfish</artifactId>
                                    <version>4.0</version>
                                </artifactInstaller>
                                -->
                                <dependencies>
                                    <dependency>
                                        <groupId>org.apache.derby</groupId>
                                        <artifactId>derby</artifactId>
                                        <classpath>none</classpath>
                                    </dependency>
                                </dependencies>
                            </container>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>embedded-glassfish</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.glassfish.embedded</groupId>
                        <artifactId>maven-embedded-glassfish-plugin</artifactId>
                        <version>4.0</version>
                        <configuration>
                            <app>target/${project.artifactId}.war</app>
                            <port>8080</port>
                            <ports>
                                <https-listener>8181</https-listener>
                            </ports>       
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.glassfish.main.common</groupId>
                                <artifactId>simple-glassfish-api</artifactId>
                                <version>4.0</version>
                            </dependency>                    
                            <dependency>
                                <groupId>org.glassfish.main.extras</groupId>
                                <artifactId>glassfish-embedded-all</artifactId>
                                <version>4.0</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>wildfly</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>${cargo.container.wildfly.id}</containerId>
                                <type>installed</type>
                                <home>${cargo.container.wildfly.home}</home>
                                <!--
                                Use this fragment if want to download/run the app server on demand
                                <artifactInstaller>
                                    <groupId>org.wildfly</groupId>
                                    <artifactId>wildfly-dist</artifactId>
                                    <version>8.0.0.Alpha4</version>
                                </artifactInstaller>
                                -->
                            </container>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>tomcat</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>${cargo.container.tomcat.id}</containerId>
                                <zipUrlInstaller>
                                    <url>http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.0-RC3/bin/apache-tomcat-8.0.0-RC3.zip</url>
                                </zipUrlInstaller>
                            </container>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>weblogic</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>${cargo.container.weblogic.id}</containerId>
                                <type>installed</type>
                                <home>${cargo.container.weblogic.home}</home>
                            </container>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>javadocs</id>
            <activation><property><name>javadocs</name></property></activation>
                <!--
                    Activate this profile to download javadoc and sources jars.
                    run:
                          mvn process-resources -Ddownload
                          
                    Notice: This feature has been removed with plugin version 2.5,
                      so keep this plugin configuration in a profile section.
                -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.4</version>
                        <executions>
                            <execution>
                                <id>sources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>sources</goal>
                                    <goal>resolve</goal>
                                </goals>
                                <configuration>
                                    <classifier>javadoc</classifier>
                                    <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <modules>
        <module>batch</module>
        <module>cdi</module>
        <module>concurrency</module>
        <module>ejb</module>
        <module>el</module>
        <module>javamail</module>
        <module>jaxrs</module>
        <module>jca</module>
        <module>jms</module>
        <module>jpa</module>
        <module>jta</module>
        <module>jsf</module>
        <module>json</module>
        <module>servlet</module>
        <module>validation</module>
        <module>websocket</module>
        <module>extra</module>
    </modules>

</project>

